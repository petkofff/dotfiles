#!/bin/bash

function lmo() {
    local l=$(ls -t | head -1)
    echo "$l"
}

function lm() {
    local toOpen=$(ls -t | head -1)

    if [ -d "$toOpen" ]; then
        echo "directory: $toOpen"
        cd "$toOpen"
    else
        if [ -e "$toOpen" ]; then
            echo "file: $toOpen"
            echo "Open? [y/n] "
            local s=$(bash -c 'read -rsn1 s; echo $s')
            if [[ $s == "y" ]]; then
                xdg-open "$toOpen"
            fi
        fi
    fi
}

function ranger-cd() {
    local tempfile='/tmp/ranger-cd-folder'
    ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
        if [ "$(cat -- "$tempfile")" != "$(echo -n $(pwd))" ]; then
            cd -- "$(cat "$tempfile")"
        fi
    rm -f -- "$tempfile"
}

function temps() {
    while true; do
        clear
        sensors
        sleep 1
    done
}

function ig() {
    local q="${*/ /%20}"
    chromium --new-tab "https://www.google.bg/search?q=$q"
}

function ex() {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2) tar xjf $1 ;;
            *.tar.gz) tar xzf $1 ;;
            *.bz2) bunzip2 $1 ;;
            *.rar) unrar x $1 ;;
            *.gz) gunzip $1 ;;
            *.tar) tar xf $1 ;;
            *.tbz2) tar xjf $1 ;;
            *.tgz) tar xzf $1 ;;
            *.zip) unzip $1 ;;
            *.Z) uncompress $1 ;;
            *.7z) 7z x $1 ;;
            *) echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# fuzzy kill
function fkill() {
    local pid
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi
}

# fuzzy git log entry selection
function git-fshow() {
    git log --graph --color=always \
        --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
    fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
        --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
                FZF-EOF"
}

# fuzzy interactive navigation
function fd() {
    if [[ "$#" != 0 ]]; then
        builtin cd "$@";
    fi
    while true; do
        local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
        local dir="$(printf '%s\n' "${lsd[@]}" |
            fzf --reverse --preview '
                __cd_nxt="$(echo {})";
                __cd_path="$(echo $(pwd)/${__cd_nxt} | sed "s;//;/;")";
                echo $__cd_path;
                echo;
                ls -p --color=always "${__cd_path}";
        ')"
        [[ ${#dir} != 0 ]] || return 0
        builtin cd "$dir" &> /dev/null
    done
}

alias p="cd ~/Documents/projects"
alias l="ls"
alias la="ls --all"
alias ll="ls -alih"
alias xo="xdg-open"
alias py="python3"
alias py2="python2"
alias act="source activate"
alias dact="source deactivate"
alias r="ranger-cd"
alias t="tmux"
alias g="git"
alias n="nnn"
alias nb="newsboat"
alias ssp="systemctl suspend"
alias pff="poweroff"
